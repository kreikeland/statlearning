tinytex::install_tinytex()
```{r setup, include=FALSE}
showsolA<-TRUE
showsolB<-TRUE
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=68),tidy=TRUE)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize")
showsolA<-TRUE
showsolB<-TRUE
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=68),tidy=TRUE)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize")
---
**We strongly recommend you to work through the Section 3.6 in the course book (Lab on linear regression)**
---
# Problem 1 (Extension from Book Ex. 9)
This question involves the use of multiple linear regression on the `Auto` data set from `ISLR` package  (you may use `?Auto` to see a description of the data). First we exclude from our analysis the variable `name` and look at the data summary and structure of the dataset.
```{r}
library(ISLR)
Auto = subset(Auto, select = -name)
#Auto$origin = factor(Auto$origin)
summary(Auto)
str(Auto)
Auto$origin = factor(Auto$origin)
library(tidyverse)
ggpairs(Auto)
library(ggplot2)
ggpairs(Auto)
library(GGally)
ggpairs(Auto)
?filter
auto_numeric <- filter(Auto, is.numeric())
auto_numeric <- filter(Auto, is.numeric(Auto))
View(auto_numeric)
View(Auto)
cor_mat <- cor(Auto[-origin])
cor_mat <- cor(Auto[-Auto$origin])
str(Auto)
quant <- 1:7
cor_mat <- cor(Auto[quant])
View(cor_mat)
auto_quant = Auto[quant]
View(auto_quant)
?lm
reg_model = lm(mpg ~., auto_quant)
summary(reg_model)
showsolA<-TRUE
showsolB<-TRUE
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=68),tidy=TRUE)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize")
reg_model
reg_model = lm(mpg ~., auto_quant)
summary(reg_model)
str(reg_model)
reg_model$coefficients['weight']
- `r reg_model$coefficients['year']` suggests that newer cars have higher mpg metrics
reg_model = lm(mpg ~., Auto)
summary(reg_model)
View(cor_mat)
View(reg_model)
autoplot(reg_model, smooth.colour = NA)
library(ggfortify)
autoplot(reg_model, smooth.colour = NA)
